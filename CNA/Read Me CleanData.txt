Read Me: CleanData.py

CleanData.py reads a path to a .bib file from the command line and outpus .csv files to be importend into neo4j to construct a co-authorship network.

This program expects A folder called DataOut. This is where the program outputs files for constructing the graph.

-----------------------------------------------------------------------------------

To build a network from a single .bib file,

Run this program with command: 

python CleanData.py <path to .bib file>



Enclose the path to the file with quotes.

-----------------------------------------------------------------------------------

If you would like to consruct a co-authorship network from multiple .bib files,

Run with command: 

python CleanData.py <.bib file 1> <.bib file 2> ... <.bib file n>


Enclose each file path with quotes, seperate each file path with spaces.

-----------------------------------------------------------------------------------


Output:


When the program is run 4 files are written to the DataOut folder, these .csv files represent the graph and can be imported into neo4j.
Two of the files are for the authors as nodes representation of the network: 'authors-nodes.csv' and 'authors-relationships.csv'. 
The other two file are for the institutions as nodes representation of the network: 'institution-nodes.csv' and 'institution-relationships.csv'.

The program offers two options for representing co-authorship networks

-----------------------------------------------------------------------------------

Option 1: authors as nodes
Each node represents an author, relationships(edges) connect authors that worked together on the same paper.

For example, consider two authors/nodes A and B if author A co-authored with author B, there will be a relationship from author A to author B and there will be a relationship from author B to author A.

'authors-nodes.csv' and 'authors-relationships.csv' should be imported into neo4j if the authors as nodes representation is desired.

-----------------------------------------------------------------------------------

Option 2: institutions as nodes
Each node represents an institution, relationships represents instances where and an author from one institution coauthored with an other from another institution.

Consider institutions X and Y, there will be a relationship between institution X and institution Y if an author from institution X co-authored with and author from institution Y.

'institution-nodes.csv' and 'institution-relationships.csv' should be imported into neo4j if the institution as nodes representation is desired.

-----------------------------------------------------------------------------------


See instructions for installing and importing data into neo4j for how to import the .csv files generated by this program.


